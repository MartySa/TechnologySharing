。关键字ref在需要的时候才加上，比如需要改值本生的时候，如果不是改值。加了ref会带来消耗。查了大半天资料的，或者看IL
。泛型其实为引用类型，所以在特例化为 值类型 时，且需要频繁赋值的时候会box，所以要注意取舍。特例化为引用类型时可能会 unbox，各种纠结。
。判断字符串是否有效，建议 if (strVal != null && strVal.Length != 0)，一般情况下，是最高效的。
。T 转 枚举（值），会有一次box，所以在设计的时候，尽量写出(int, uint)的形参类型进行枚举强转，能提升2倍性能。
。接上一条，那么Propert<T> 在读写很频繁的时候，就应该使用ToXX((uint)index, XX); 这个强转接口，不要使用T转成枚举那个接口。
。经常检查自己写的代码，减少不必要的循环，比如有需要去遍历一次的时候，才去调用该循环。
。目前mono自身有bug,写循环的时候尽量写成for()，而不是forech()，这个bug在Unity 5（使用mono的情况下，5.3.4f1 还是有这个问题，亲测MartySa）依然存在，详见 http://www.zhihu.com/question/30334270 王剑飞的回答，有一次box，C#是没这个bug了，mono的bug。unity5.3.5p8出了个升级mono编译器的版本，消除了这部分GC，具体可参考：C# Compiler - Upgraded C# Compiler on 5.3.5p8
。字符串拼接 写一行 + 最高效